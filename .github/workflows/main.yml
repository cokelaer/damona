name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches-ignore: []

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 5
      matrix:
        python: [3.7, 3.8, 3.9]
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - uses: docker-practice/actions-setup-docker@master
    - name: Test docker
      run: |
          set -x
          docker version
          docker run --rm hello-world
    - name: Install singularity
      run: |

        sudo apt-get update && \
        sudo apt-get install -y build-essential libseccomp-dev pkg-config squashfs-tools cryptsetup
        #sudo rm -r /usr/local/go
        export VERSION=1.13.15 OS=linux ARCH=amd64  # change this as you need
        wget -O /tmp/go${VERSION}.${OS}-${ARCH}.tar.gz https://dl.google.com/go/go${VERSION}.${OS}-${ARCH}.tar.gz
        sudo tar -C /usr/local -xzf /tmp/go${VERSION}.${OS}-${ARCH}.tar.gz

        echo 'export GOPATH=${HOME}/go' >> ~/.bashrc && \
        echo 'export PATH=/usr/local/go/bin:${PATH}:${GOPATH}/bin' >> ~/.bashrc && \
        source ~/.bashrc

        curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh |
        sh -s -- -b $(go env GOPATH)/bin v1.21.0

        mkdir -p ${GOPATH}/src/github.com/sylabs && \
        cd ${GOPATH}/src/github.com/sylabs && \
        git clone https://github.com/sylabs/singularity.git && \
        cd singularity

        git checkout v3.6.3

        cd ${GOPATH}/src/github.com/sylabs/singularity && \
        ./mconfig && \
        cd ./builddir && \
        make && \
        sudo make install

        singularity version


        #  sudo wget -O- http://neuro.debian.net/lists/focal.au.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list
        #  sudo apt-key adv --recv-keys --keyserver hkps://keyserver.ubuntu.com 0xA5D32F012649A5A9
        #  sudo apt-get update
        #  sudo apt-get install -y singularity-container
    - name: Set up Python 3.X
      uses: actions/setup-python@v2
      with:
        ipython-version: ${{ matrix.python }}
    - name: conda
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo "$CONDA/bin" >> $GITHUB_PATH
    - name: Install dependencies conda
      run: |
        conda install -c conda-forge --quiet mamba python=${{ matrix.python }}
        mamba install -c conda-forge singularity --quiet
    - name: Install Damona using pip
      run: |
        pip install -r requirements.txt
        pip install -r requirements_dev.txt
        pip install .
    - name: Test with pytest
      run: |
        pytest --cov-report term --cov=damona
      env:
        DAMONA_EXE: /usr/share/miniconda/bin/damona
        DAMONA_PATH: /home/runner/.config/damona
    - name: coveralls
      run: |
        coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ github.token }}






